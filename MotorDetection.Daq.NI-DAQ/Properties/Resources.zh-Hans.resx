<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Absolute_value" xml:space="preserve">
    <value>绝对值</value>
  </data>
  <data name="Acceleration" xml:space="preserve">
    <value>加速度</value>
  </data>
  <data name="Amplitude__V_" xml:space="preserve">
    <value>幅值V</value>
  </data>
  <data name="Average_number_of_triggers" xml:space="preserve">
    <value>触发平均次数</value>
  </data>
  <data name="Calibration_value" xml:space="preserve">
    <value>校准值</value>
  </data>
  <data name="Channel_name" xml:space="preserve">
    <value>通道名称</value>
  </data>
  <data name="Channel_type" xml:space="preserve">
    <value>通道类型</value>
  </data>
  <data name="Coupling_mode" xml:space="preserve">
    <value>耦合方式</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>测点描述</value>
  </data>
  <data name="Device_model" xml:space="preserve">
    <value>设备型号</value>
  </data>
  <data name="Device_name" xml:space="preserve">
    <value>设备名称</value>
  </data>
  <data name="Device_Select" xml:space="preserve">
    <value>设备选择</value>
  </data>
  <data name="Displacement" xml:space="preserve">
    <value>位移</value>
  </data>
  <data name="Enable_trigger" xml:space="preserve">
    <value>启用 触发器</value>
  </data>
  <data name="End_frequency__Hz_" xml:space="preserve">
    <value>结束频率(Hz)</value>
  </data>
  <data name="Engineering_unit" xml:space="preserve">
    <value>工程单位</value>
  </data>
  <data name="Falling_edge" xml:space="preserve">
    <value>下降沿</value>
  </data>
  <data name="Frequency___start_frequency__Hz_" xml:space="preserve">
    <value>频率/起始频率(Hz)</value>
  </data>
  <data name="IEPE" xml:space="preserve">
    <value>IEPE</value>
  </data>
  <data name="Input_channel_settings" xml:space="preserve">
    <value>输入通道设置</value>
  </data>
  <data name="Input_voltage_" xml:space="preserve">
    <value>输入电压</value>
  </data>
  <data name="Lag_length__usually_used_for_hammer_method_" xml:space="preserve">
    <value>滞后长度（通常用于锤击法）</value>
  </data>
  <data name="Measure" xml:space="preserve">
    <value>测量</value>
  </data>
  <data name="Measurement_type" xml:space="preserve">
    <value>测量类型</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>编号</value>
  </data>
  <data name="Output_channel_settings" xml:space="preserve">
    <value>输出通道设置</value>
  </data>
  <data name="Output_voltage_" xml:space="preserve">
    <value>输出电压</value>
  </data>
  <data name="Phase" xml:space="preserve">
    <value>相位</value>
  </data>
  <data name="Reference" xml:space="preserve">
    <value>参考</value>
  </data>
  <data name="Refresh_device_list" xml:space="preserve">
    <value>刷新设备列表</value>
  </data>
  <data name="Rising_edge" xml:space="preserve">
    <value>上升沿</value>
  </data>
  <data name="Select_trigger_channel" xml:space="preserve">
    <value>选择触发通道</value>
  </data>
  <data name="SettingsAcquisitionPageName" xml:space="preserve">
    <value>采集</value>
  </data>
  <data name="SettingsChannelPageGeneral" xml:space="preserve">
    <value>通道</value>
  </data>
  <data name="SettingTriggerPageGeneral" xml:space="preserve">
    <value>触发器</value>
  </data>
  <data name="State" xml:space="preserve">
    <value>状态</value>
  </data>
  <data name="Time__s_" xml:space="preserve">
    <value>时间(s)</value>
  </data>
  <data name="Trigger_amount" xml:space="preserve">
    <value>触发量</value>
  </data>
  <data name="Trigger_mode_" xml:space="preserve">
    <value>触发方式</value>
  </data>
  <data name="Velocity" xml:space="preserve">
    <value>速度</value>
  </data>
  <data name="Voltage" xml:space="preserve">
    <value>电压</value>
  </data>
  <data name="Waveform_type" xml:space="preserve">
    <value>波形类型</value>
  </data>
</root>